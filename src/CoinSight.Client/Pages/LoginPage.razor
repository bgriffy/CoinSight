@page "/login"
@using CoinConstraint.Application.Identity
@inject ICCAuthenticationService AuthService
@inject NavigationManager NavigationManager

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<LoadSpinner @ref="_loadSpinner"></LoadSpinner>

@if (!_isLoading)
{
    <div class="login-container">
        <div class="card">
            <div class="card-body login-card">
                <h2 class="mb-3">Sign in</h2>
                <p class="mb-3">Login with your credentials.</p>
                <p class="mb-4">Don't have an account? <a href="Register">Register here</a>.</p>
                <EditForm Model="loginRequest" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />
                    <Microsoft.AspNetCore.Components.Forms.ValidationSummary />
                    <div class="form-group">
                        <label for="email">Email address</label>
                        <InputText Id="email" Class="form-control" @bind-Value="loginRequest.Email" />
                        <ValidationMessage For="@(() => loginRequest.Email)" />
                    </div>
                    <div class="form-group">
                        <label for="password">Password</label>
                        <InputText Id="password" type="password" Class="form-control" @bind-Value="loginRequest.Password" />
                        <ValidationMessage For="@(() => loginRequest.Password)" />
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </EditForm>
            </div>
        </div>
    </div>
}

<style>
    .login-container{
        display: flex; 
        justify-content: center;
    }

    .login-card{
        padding: 6rem;
    }

    .form-group {
        margin-bottom: 2rem;
    }
</style>